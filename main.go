package main

import (
	"encoding/json"
	"io/ioutil"
	"log"
	"os"
	"os/signal"
	"sync"
	"syscall"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Config
type Config struct {
	TelegramAPIToken string `json:"telegram_api_token"`
}

// –ú–∞–ø–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —è–∑—ã–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
var userLanguages = sync.Map{}

// –ú–∞–ø–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
var messageIDs = sync.Map{}

func main() {
	// –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	configFile, err := os.Open("config.json")
	if err != nil {
		log.Fatalf("failed to open config file: %s", err)
	}
	defer configFile.Close()

	// –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
	byteValue, _ := ioutil.ReadAll(configFile)

	// –î–µ–∫–æ–¥–∏—Ä—É–π—Ç–µ JSON –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Config
	var config Config
	json.Unmarshal(byteValue, &config)

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞
	bot, err := tgbotapi.NewBotAPI(config.TelegramAPIToken)
	if err != nil {
		log.Panic(err)
	}

	bot.Debug = true // –í–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

	log.Printf("Authorized on account %s", bot.Self.UserName)

	// –°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	// –°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤
	stop := make(chan os.Signal, 1)
	signal.Notify(stop, os.Interrupt, syscall.SIGTERM)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
	for {
		select {
		case update := <-updates:
			if update.Message == nil && update.CallbackQuery == nil { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ª—é–±—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏–ª–∏ callback query
				continue
			}

			if update.Message != nil {
				if update.Message.IsCommand() {
					switch update.Message.Command() {
					case "start":
						msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Select language")
						msg.ReplyMarkup = languageKeyboard()
						sentMsg, _ := bot.Send(msg)
						messageIDs.Store(update.Message.Chat.ID, sentMsg.MessageID)
					}
				} else {
					// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
					switch update.Message.Text {
					case "English üá∫üá∏":
						userLanguages.Store(update.Message.Chat.ID, "en")
						sendPhotoMessage(bot, update.Message.Chat.ID, "en")
					case "–†—É—Å—Å–∫–∏–π üá∑üá∫":
						userLanguages.Store(update.Message.Chat.ID, "ru")
						sendPhotoMessage(bot, update.Message.Chat.ID, "ru")
					}
				}
			} else if update.CallbackQuery != nil {
				handleSupportUs(bot, update)
			}
		case <-stop:
			log.Println("Received stop signal, shutting down...")
			return
		}
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–∞
func languageKeyboard() tgbotapi.ReplyKeyboardMarkup {
	keyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("English üá∫üá∏"),
			tgbotapi.NewKeyboardButton("–†—É—Å—Å–∫–∏–π üá∑üá∫"),
		),
	)
	keyboard.OneTimeKeyboard = true
	keyboard.ResizeKeyboard = true
	return keyboard
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
func sendPhotoMessage(bot *tgbotapi.BotAPI, chatID int64, language string) {
	var caption string
	var keyboard tgbotapi.InlineKeyboardMarkup

	if language == "en" {
		caption = `üåü Join the Future with OPG Token! üåü

Dear Friends,

We are thrilled to introduce our new OPG token! Here are a few reasons why you should become part of our community and invest in OPG:

- Active and Large Community
- Based on a Real Person with a massive Twitch community
- Support and Interaction

Don't miss the opportunity to be part of something bigger and invest in the future with OPG Token. Together, we can reach new heights!

Best regards,
The OPG Token Team`
		keyboard = optionsInlineKeyboard("en")
	} else {
		caption = `üåü –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –±—É–¥—É—â–µ–º—É —Å —Ç–æ–∫–µ–Ω–æ–º OPG! üåü

–î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è,

–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω OPG! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏—á–∏–Ω, –ø–æ—á–µ–º—É –≤—ã –¥–æ–ª–∂–Ω—ã —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ OPG:

- –ê–∫—Ç–∏–≤–Ω–æ–µ –∏ –±–æ–ª—å—à–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
- –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —á–µ–ª–æ–≤–µ–∫–µ —Å –æ–≥—Ä–æ–º–Ω—ã–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º –Ω–∞ Twitch
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ

–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —á–µ–≥–æ-—Ç–æ –±–æ–ª—å—à–µ–≥–æ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É–¥—É—â–µ–µ —Å —Ç–æ–∫–µ–Ω–æ–º OPG. –í–º–µ—Å—Ç–µ –º—ã –º–æ–∂–µ–º –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ —Ç–æ–∫–µ–Ω–∞ OPG`
		keyboard = optionsInlineKeyboard("ru")
	}

	// –ü—É—Ç—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
	photoPath := "logo.png" // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å –∫ –≤–∞—à–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

	// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
	photo := tgbotapi.NewPhoto(chatID, tgbotapi.FilePath(photoPath))
	photo.Caption = caption
	photo.ReplyMarkup = &keyboard
	sentPhoto, _ := bot.Send(photo)

	// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	messageIDs.Store(chatID, sentPhoto.MessageID)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –æ–ø—Ü–∏—è–º–∏
func optionsInlineKeyboard(language string) tgbotapi.InlineKeyboardMarkup {
	var buttons [][]tgbotapi.InlineKeyboardButton

	if language == "en" {
		buttons = [][]tgbotapi.InlineKeyboardButton{
			{
				tgbotapi.NewInlineKeyboardButtonURL("tg channel", "https://t.me/OPGtoken"),
				tgbotapi.NewInlineKeyboardButtonData("support us", "support_us"),
			},
			{
				tgbotapi.NewInlineKeyboardButtonURL("discord community", "https://discord.gg/ztpURnD2S5"),
			},
		}
	} else {
		buttons = [][]tgbotapi.InlineKeyboardButton{
			{
				tgbotapi.NewInlineKeyboardButtonURL("tg –∫–∞–Ω–∞–ª", "https://t.me/OPGtoken"),
				tgbotapi.NewInlineKeyboardButtonData("–ø–æ–¥–¥–µ—Ä–∂–∏ –Ω–∞—Å", "support_us"),
			},
			{
				tgbotapi.NewInlineKeyboardButtonURL("—Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤ discord", "https://discord.gg/ztpURnD2S5"),
			},
		}
	}

	keyboard := tgbotapi.NewInlineKeyboardMarkup(buttons...)
	return keyboard
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏ —Ñ–æ—Ç–æ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
func editPhotoCaption(bot *tgbotapi.BotAPI, chatID int64, language string) {
	var caption string
	var keyboard tgbotapi.InlineKeyboardMarkup

	if language == "en" {
		caption = `üåü Join the Future with OPG Token! üåü

Dear Friends,

We are thrilled to introduce our new OPG token! Here are a few reasons why you should become part of our community and invest in OPG:

- Active and Large Community
- Based on a Real Person with a massive Twitch community
- Support and Interaction

Don't miss the opportunity to be part of something bigger and invest in the future with OPG Token. Together, we can reach new heights!

Best regards,
The OPG Token Team`
		keyboard = optionsInlineKeyboard("en")
	} else {
		caption = `üåü –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –±—É–¥—É—â–µ–º—É —Å —Ç–æ–∫–µ–Ω–æ–º OPG! üåü

–î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è,

–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω OPG! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏—á–∏–Ω, –ø–æ—á–µ–º—É –≤—ã –¥–æ–ª–∂–Ω—ã —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ OPG:

- –ê–∫—Ç–∏–≤–Ω–æ–µ –∏ –±–æ–ª—å—à–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
- –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —á–µ–ª–æ–≤–µ–∫–µ —Å –æ–≥—Ä–æ–º–Ω—ã–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º –Ω–∞ Twitch
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ

–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —á–µ–≥–æ-—Ç–æ –±–æ–ª—å—à–µ–≥–æ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É–¥—É—â–µ–µ —Å —Ç–æ–∫–µ–Ω–æ–º OPG. –í–º–µ—Å—Ç–µ –º—ã –º–æ–∂–µ–º –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ —Ç–æ–∫–µ–Ω–∞ OPG`
		keyboard = optionsInlineKeyboard("ru")
	}

	// –ü–æ–ª—É—á–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	messageID, ok := messageIDs.Load(chatID)
	if !ok {
		log.Printf("Message ID not found for chat ID: %d", chatID)
		return
	}

	// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ —Ñ–æ—Ç–æ
	editMsg := tgbotapi.NewEditMessageCaption(chatID, int(messageID.(int64)), caption)
	editMsg.ReplyMarkup = &keyboard
	bot.Send(editMsg)
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Support us"
func handleSupportUs(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	if update.CallbackQuery != nil {
		if update.CallbackQuery.Data == "support_us" {
			msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "BTC - UQALnuvdPTMzLeSX67pfPrn3tvmlcN-Q7GsWgyQLIMd1QBBQ\nTON - UQALnuvdPTMzLeSX67pfPrn3tvmlcN-Q7GsWgyQLIMd1QBBQ\ndonation alerts - https://www.donationalerts.com/r/neyman_opg")
			bot.Send(msg)
		}
	}
}
